# .github/workflows/deploy.yml
name: Terraform EC2 + Docker via Ansible

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - destroy

jobs:
  Terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Retrieve IP address
        working-directory: terraform
        run: echo "::set-output name=ip::$(cat ip.txt)"
        
      - name: Install Ansible and SSH tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible sshpass

      - name: Install Ansible Role
        run: ansible-galaxy install bsmeding.docker

      - name: Save Private Key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Get EC2 IP from Terraform output
        working-directory: terraform
        run: |
          IP=$(cat ip.txt)
          echo "EC2_IP=$IP" >> $GITHUB_ENV
      
      - name: Create Ansible Inventory
        run: |
          echo "[all]" > inventory.ini
          echo "${{ env.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=key.pem" >> inventory.ini
      
      - name: Debug inventory.ini content
        run: cat inventory.ini


      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini ansible/docker_installation.yml
