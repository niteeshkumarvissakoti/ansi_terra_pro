# .github/workflows/deploy.yml

name: Terraform EC2 + Docker via Ansible

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - destroy

jobs:
  Terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply or Destroy
        working-directory: terraform
        run: |
          if [ "${{ github.event.inputs.action }}" = "create" ]; then
            terraform apply -auto-approve
          else
            terraform destroy -auto-approve
          fi

      
      - name: Get EC2 Public IP
        run: |
          terraform output -raw ec2_public_ip > ec2_ip.txt
          echo "EC2_PUBLIC_IP=$(cat ec2_ip.txt)" >> $GITHUB_ENV
  
      - name: Upload EC2 IP as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ec2-public-ip
          path: ec2_ip.txt
  
      - name: Show EC2 Public IP
        run: echo "The EC2 Public IP is $EC2_PUBLIC_IP"

      
      
      # - name: Get EC2 IP
      #   id: ec2ip
      #   working-directory: terraform
      #   run: |
      #     EC2IP=$(cat ip.txt)
      #     echo "ip=$EC2IP" >> $GITHUB_OUTPUT

      # # Ensure the public IP is output to ip.txt (adapt this if your output name differs)
      # - name: Save EC2 IP to file
      #   working-directory: terraform
      #   run: terraform output -raw public_ip > ip.txt

      # - name: Debug IP file
      #   working-directory: terraform
      #   run: cat ip.txt

      # - name: Get EC2 IP
      #   id: ec2ip
      #   working-directory: terraform
      #   run: |
      #     EC2IP=$(cat ip.txt)
      #     echo "ip=$EC2IP" >> $GITHUB_OUTPUT

      # - name: Debug EC2 IP output
      #   run: echo "${{ steps.ec2ip.outputs.ip }}"

      # - name: Install Ansible & SSH tools
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y ansible sshpass

      # - name: Install Ansible Role
      #   run: ansible-galaxy install bsmeding.docker

      # - name: Save private key
      #   run: |
      #     echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
      #     chmod 600 key.pem

      # - name: Create Ansible Inventory
      #   run: |
      #     echo "[all]" > inventory.ini
      #     echo "${{ steps.ec2ip.outputs.ip }} ansible_user=ec2-user ansible_ssh_private_key_file=key.pem" >> inventory.ini
      #     cat inventory.ini

      # - name: Run Ansible Playbook
      #   run: ansible-playbook -i inventory.ini ansible/docker_installation.yml
